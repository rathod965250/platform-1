// This file will be auto-generated by Supabase CLI
// For now, we'll define the basic types manually

// Question Options Types - JSONB structure
export type QuestionOptions = 
  | { 
      options: string[]
      correct_answer: string
      explanation?: string
    }
  | { 
      A: string
      B: string
      C?: string
      D?: string
      correct_answer: string
      explanation?: string
    }
  | { 
      correct_answer: string
      explanation?: string
    }

// Test with relations
export interface TestWithRelations {
  id: string
  title: string
  slug: string
  description: string | null
  category_id: string | null
  test_type: 'practice' | 'mock' | 'company_specific'
  company_name: string | null
  duration_minutes: number
  total_marks: number
  negative_marking: boolean
  is_published: boolean
  created_by: string
  created_at: string
  category?: {
    id: string
    name: string
  } | null
}

// Test Attempt with relations
export interface TestAttemptWithRelations {
  id: string
  user_id: string
  test_id: string
  score: number
  total_questions: number
  correct_answers: number
  skipped_count: number
  marked_for_review_count: number
  time_taken_seconds: number
  percentile: number | null
  rank: number | null
  submitted_at: string | null
  created_at: string
  test?: TestWithRelations | null
}

// Question with relations
export interface QuestionWithRelations {
  id: string
  test_id: string | null
  subcategory_id: string
  question_type: 'mcq' | 'true_false' | 'fill_blank'
  question_text: string
  options: QuestionOptions
  correct_answer: string
  explanation: string
  marks: number
  difficulty: 'easy' | 'medium' | 'hard'
  order: number
  subcategory?: {
    id: string
    name: string
    category?: {
      id: string
      name: string
    } | null
  } | null
}

// Attempt Answer with relations
export interface AttemptAnswerWithRelations {
  id: string
  attempt_id: string
  question_id: string
  user_answer: string | null
  is_correct: boolean
  is_marked_for_review: boolean
  is_skipped: boolean
  marks_obtained: number
  time_taken_seconds: number
  created_at: string
  question?: QuestionWithRelations | null
}

// Adaptive State with relations
export interface AdaptiveStateWithRelations {
  id: string
  user_id: string
  category_id: string
  mastery_score: number // DECIMAL(3,2) - 0 to 1
  current_difficulty: 'easy' | 'medium' | 'hard'
  recent_accuracy: number[] // DECIMAL(5,2)[]
  avg_time_seconds: number
  last_updated: string
  category?: {
    id: string
    name: string
  } | null
}

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          role: 'student' | 'admin'
          avatar_url: string | null
          college: string | null
          graduation_year: number | null
          target_companies: string[] | null
          phone: string | null
          created_at: string
          updated_at: string
        }
        Insert: Omit<Database['public']['Tables']['profiles']['Row'], 'created_at' | 'updated_at'>
        Update: Partial<Database['public']['Tables']['profiles']['Insert']>
      }
      categories: {
        Row: {
          id: string
          name: string
          slug: string
          description: string | null
          icon: string
          order: number
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['categories']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['categories']['Insert']>
      }
      subcategories: {
        Row: {
          id: string
          category_id: string
          name: string
          slug: string
          description: string | null
          order: number
        }
        Insert: Omit<Database['public']['Tables']['subcategories']['Row'], 'id'>
        Update: Partial<Database['public']['Tables']['subcategories']['Insert']>
      }
      tests: {
        Row: {
          id: string
          title: string
          slug: string
          description: string | null
          category_id: string | null
          test_type: 'practice' | 'mock' | 'company_specific'
          company_name: string | null
          duration_minutes: number
          total_marks: number
          negative_marking: boolean
          is_published: boolean
          created_by: string
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['tests']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['tests']['Insert']>
      }
      questions: {
        Row: {
          id: string
          test_id: string | null
          subcategory_id: string
          question_type: 'mcq' | 'true_false' | 'fill_blank'
          question_text: string
          options: QuestionOptions // JSONB - properly typed
          correct_answer: string
          explanation: string
          marks: number
          difficulty: 'easy' | 'medium' | 'hard'
          order: number
        }
        Insert: Omit<Database['public']['Tables']['questions']['Row'], 'id'>
        Update: Partial<Database['public']['Tables']['questions']['Insert']>
      }
      practice_sessions: {
        Row: {
          id: string
          user_id: string
          category_id: string
          total_questions: number
          correct_answers: number
          skipped_count: number
          time_taken_seconds: number
          config: {
            difficulty: string
            question_count: number
            timed: boolean
            time_limit?: number
          }
          completed_at: string
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['practice_sessions']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['practice_sessions']['Insert']>
      }
      session_answers: {
        Row: {
          id: string
          session_id: string
          question_id: string
          user_answer: string | null
          is_correct: boolean
          time_taken_seconds: number
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['session_answers']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['session_answers']['Insert']>
      }
      test_attempts: {
        Row: {
          id: string
          user_id: string
          test_id: string
          score: number
          total_questions: number
          correct_answers: number
          skipped_count: number
          marked_for_review_count: number
          time_taken_seconds: number
          percentile: number | null
          rank: number | null
          submitted_at: string
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['test_attempts']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['test_attempts']['Insert']>
      }
      attempt_answers: {
        Row: {
          id: string
          attempt_id: string
          question_id: string
          user_answer: string | null
          is_correct: boolean
          is_marked_for_review: boolean
          is_skipped: boolean
          marks_obtained: number
          time_taken_seconds: number
          created_at: string
        }
        Insert: Omit<Database['public']['Tables']['attempt_answers']['Row'], 'id' | 'created_at'>
        Update: Partial<Database['public']['Tables']['attempt_answers']['Insert']>
      }
      user_analytics: {
        Row: {
          user_id: string
          category_id: string | null
          subcategory_id: string | null
          total_attempts: number
          total_practice_sessions: number
          avg_score: number
          total_time_spent_seconds: number
          weak_areas: Record<string, any>
          strengths: Record<string, any>
          current_streak_days: number
          last_activity_date: string
          updated_at: string
        }
        Insert: Database['public']['Tables']['user_analytics']['Row']
        Update: Partial<Database['public']['Tables']['user_analytics']['Insert']>
      }
      leaderboard: {
        Row: {
          id: string
          user_id: string
          test_id: string | null
          rank: number
          score: number
          time_taken: number
          percentile: number
          period_type: 'all' | 'weekly' | 'monthly'
          created_at: string
          updated_at: string
        }
        Insert: Omit<Database['public']['Tables']['leaderboard']['Row'], 'id' | 'created_at' | 'updated_at'>
        Update: Partial<Database['public']['Tables']['leaderboard']['Insert']>
      }
    }
  }
}

